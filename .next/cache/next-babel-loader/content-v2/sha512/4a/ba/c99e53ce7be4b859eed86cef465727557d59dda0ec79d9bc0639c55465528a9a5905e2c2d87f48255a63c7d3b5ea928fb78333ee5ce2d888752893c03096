{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Meta from '../../../components/Meta';\nimport { server } from '../../../config';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nconst article = ({\n  article\n}) => {\n  //  const router = useRouter()\n  //  const {id} = router.query\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Meta, {\n      title: article.title,\n      description: article.excerpt\n    }), /*#__PURE__*/_jsx(\"h1\", {\n      children: article.title\n    }), /*#__PURE__*/_jsxs(\"p\", {\n      children: [\" \", article.body]\n    }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Link, {\n      href: \"/\",\n      children: \"Go back\"\n    })]\n  });\n};\n\nexport const getStaticProps = async context => {\n  const res = await fetch(`${server}/api/articles/${context.params.id}`, {\n    headers: {\n      Accept: 'application/json, text/plain, */*',\n      'User-Agent': '*'\n    }\n  });\n  const article = await res.json();\n  return {\n    props: {\n      article\n    }\n  };\n};\nexport const getStaticPaths = async () => {\n  const res = await fetch(`${server}/api/articles`, {\n    headers: {\n      Accept: 'application/json, text/plain, */*',\n      'User-Agent': '*'\n    }\n  });\n  const articles = await (await res).json();\n  const ids = articles.map(article => article.id);\n  const paths = ids.map(id => ({\n    params: {\n      id: id.toString()\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport default article;","map":null,"metadata":{},"sourceType":"module"}