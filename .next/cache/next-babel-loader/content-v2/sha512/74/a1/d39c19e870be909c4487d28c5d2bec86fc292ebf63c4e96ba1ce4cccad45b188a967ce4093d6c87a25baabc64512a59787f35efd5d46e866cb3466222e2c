{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/glenn/Next.js_Learning/pages/article/[id]/index.js\";\nimport Meta from '../../../components/Meta';\nimport { server } from '../../../config';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nconst article = ({\n  article\n}) => {\n  //  const router = useRouter()\n  //  const {id} = router.query\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: article.title,\n      description: article.excerpt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: article.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", article.body]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: \"Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport const getStaticProps = async context => {\n  const res = await fetch(`${server}/api/articles/${context.params.id}`, {\n    headers: {\n      Accept: 'application/json, text/plain, */*',\n      'User-Agent': '*'\n    }\n  });\n  const article = await res.json();\n  return {\n    props: {\n      article\n    }\n  };\n};\nexport const getStaticPaths = async () => {\n  const res = await fetch(`${server}/api/articles`, {\n    headers: {\n      Accept: 'application/json, text/plain, */*',\n      'User-Agent': '*'\n    }\n  });\n  const articles = await (await res).json();\n  const ids = articles.map(article => article.id);\n  const paths = ids.map(id => ({\n    params: {\n      id: id.toString()\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport default article;","map":{"version":3,"sources":["/Users/glenn/Next.js_Learning/pages/article/[id]/index.js"],"names":["Meta","server","useRouter","Link","article","title","excerpt","body","getStaticProps","context","res","fetch","params","id","headers","Accept","json","props","getStaticPaths","articles","ids","map","paths","toString","fallback"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,0BAAjB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,MAAMC,OAAO,GAAG,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAiB;AAC7B;AACA;AACA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEA,OAAO,CAACC,KAArB;AAA4B,MAAA,WAAW,EAAED,OAAO,CAACE;AAAjD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKF,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,sBAAKD,OAAO,CAACG,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AASH,CAZD;;AAcA,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC7C,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEV,MAAO,iBAAgBQ,OAAO,CAACG,MAAR,CAAeC,EAAG,EAA7C,EAAgD;AACnEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,mCADD;AAEP,oBAAc;AAFP;AAD0D,GAAhD,CAAvB;AAOA,QAAMX,OAAO,GAAG,MAAMM,GAAG,CAACM,IAAJ,EAAtB;AACA,SAAO;AACHC,IAAAA,KAAK,EAAE;AACHb,MAAAA;AADG;AADJ,GAAP;AAKH,CAdM;AAgBP,OAAO,MAAMc,cAAc,GAAG,YAAY;AACtC,QAAMR,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEV,MAAO,eAAX,EAA2B;AAC9Ca,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,mCADD;AAEP,oBAAc;AAFP;AADqC,GAA3B,CAAvB;AAMA,QAAMI,QAAQ,GAAG,MAAM,CAAC,MAAMT,GAAP,EAAYM,IAAZ,EAAvB;AACA,QAAMI,GAAG,GAAGD,QAAQ,CAACE,GAAT,CAAcjB,OAAD,IAAaA,OAAO,CAACS,EAAlC,CAAZ;AACA,QAAMS,KAAK,GAAGF,GAAG,CAACC,GAAJ,CAASR,EAAD,KAAS;AAAED,IAAAA,MAAM,EAAE;AAAEC,MAAAA,EAAE,EAAEA,EAAE,CAACU,QAAH;AAAN;AAAV,GAAT,CAAR,CAAd;AAEA,SAAO;AACHD,IAAAA,KADG;AAEHE,IAAAA,QAAQ,EAAE;AAFP,GAAP;AAIH,CAfM;AAgBP,eAAepB,OAAf","sourcesContent":["import Meta from '../../../components/Meta'\nimport { server } from '../../../config'\nimport { useRouter } from 'next/router'\nimport Link from 'next/link'\nconst article = ({ article }) => {\n    //  const router = useRouter()\n    //  const {id} = router.query\n    return (\n        <>\n            <Meta title={article.title} description={article.excerpt} />\n            <h1>{article.title}</h1>\n            <p> {article.body}</p>\n            <br />\n            <Link href='/'>Go back</Link>\n        </>\n    )\n}\n\nexport const getStaticProps = async (context) => {\n    const res = await fetch(`${server}/api/articles/${context.params.id}`, {\n        headers: {\n          Accept: 'application/json, text/plain, */*',\n          'User-Agent': '*',\n        },\n      })\n\n    const article = await res.json()\n    return {\n        props: {\n            article\n        },\n    }\n}\n\nexport const getStaticPaths = async () => {\n    const res = await fetch(`${server}/api/articles`, {\n        headers: {\n          Accept: 'application/json, text/plain, */*',\n          'User-Agent': '*',\n        },\n      })\n    const articles = await (await res).json()\n    const ids = articles.map((article) => article.id)\n    const paths = ids.map((id) => ({ params: { id: id.toString() } }))\n\n    return {\n        paths,\n        fallback: false,\n    }\n}\nexport default article\n"]},"metadata":{},"sourceType":"module"}